package upload_area

templ UploadArea() {
  <div class="mb-8 space-y-4" x-data="uploadArea()">
    <!-- Drop Area -->
    <label
      for="fileInput"
      class="flex flex-col items-center justify-center w-full h-40 border-2 border-dashed rounded-lg cursor-pointer bg-base-200 hover:bg-base-300"
      x-on:dragover.prevent
      x-on:drop.prevent="addFiles($event.dataTransfer.files)"
    >
      <div class="flex flex-col items-center justify-center pt-5 pb-6">
        <svg class="w-10 h-10 mb-3 opacity-70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M7 16a4 4 0 01-.88-7.903A5.002 5.002 0 0115.9 6H16a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
        </svg>
        <p class="mb-2 text-sm text-gray-500">Click to upload or drag and drop</p>
        <p class="text-xs text-gray-400">MP3, WAV, FLAC, OGG, AAC, M4A</p>
      </div>

      <input
        id="fileInput"
        type="file"
        name="files"
        accept=".mp3,.wav,.flac,.ogg,.aac,.m4a"
        multiple
        class="hidden"
        x-on:change="onPickerChange($event)"
      />
    </label>

    <!-- Uploaded Files List -->
    <div id="uploadedFiles" class="space-y-2">
      <template x-for="item in files" :key="item.id">
        <div class="p-2 bg-base-200 rounded-lg">
          <div class="flex items-center justify-between text-sm">
            <div class="truncate">
              <span class="font-medium truncate" x-text="item.file.name"></span>
              <span class="opacity-60 ml-2" x-text="formatSize(item.file.size)"></span>
            </div>
            <button type="button" class="btn btn-ghost btn-xs" x-on:click="remove(item.id)">âœ•</button>
          </div>
          <progress class="progress progress-primary w-full mt-1" :value="item.progress" max="100"></progress>
        </div>
      </template>

      <!-- Feedback for skipped files -->
      <p class="text-xs text-error" x-show="rejectedCount > 0" x-text="`${rejectedCount} file(s) skipped (invalid type)`"></p>
    </div>
  </div>

  <!-- Alpine component (define once on the page; safe inline here) -->
  <script>
    document.addEventListener('alpine:init', () => {
      Alpine.data('uploadArea', () => ({
        files: [],
        rejectedCount: 0,
        allowedExts: ['.mp3', '.wav', '.flac', '.ogg', '.aac', '.m4a'],

        onPickerChange(e) {
          this.addFiles(e.target.files);
          // allow picking the same file again later
          e.target.value = '';
        },

        addFiles(fileList) {
          const incoming = Array.from(fileList);
          let rejects = 0;

          incoming.forEach(f => {
            if (!this.isAllowed(f)) { rejects++; return; }
            const id = `${f.name}-${f.size}-${f.lastModified}`;
            // de-dupe by name+size+mtime
            if (!this.files.some(x => x.id === id)) {
              this.files.push({ id, file: f, progress: 0 });
            }
          });

          this.rejectedCount += rejects;
        },

        remove(id) {
          this.files = this.files.filter(x => x.id !== id);
        },

        isAllowed(file) {
          const name = file.name.toLowerCase();
          return this.allowedExts.some(ext => name.endsWith(ext));
        },

        formatSize(bytes) {
          return (bytes / 1024 / 1024).toFixed(2) + ' MB';
        }
      }));
    });
  </script>
}
