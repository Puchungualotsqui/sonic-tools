// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package settings

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Compress() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div><h3 class=\"text-lg font-semibold mb-3\">Compression Method</h3><div class=\"flex flex-col gap-2\"><label class=\"flex items-center gap-2\"><input type=\"radio\" name=\"method\" value=\"percentage\" class=\"radio radio-sm\" checked> <span>Target File Size (percentage)</span></label> <label class=\"flex items-center gap-2\"><input type=\"radio\" name=\"method\" value=\"mb\" class=\"radio radio-sm\"> <span>Target File Size (MB)</span></label> <label class=\"flex items-center gap-2\"><input type=\"radio\" name=\"method\" value=\"quality\" class=\"radio radio-sm\"> <span>Target Audio Quality</span></label></div></div><!-- Percentage --><div id=\"percentageInput\" class=\"space-y-2\"><label class=\"font-medium\">Percentage</label> <input type=\"range\" id=\"percentageRange\" name=\"percentage\" min=\"0\" max=\"100\" value=\"50\" class=\"range\" oninput=\"document.getElementById('percentageValue').innerText = this.value + '%'\"><div class=\"flex justify-between text-base font-medium px-1\"><span>0%</span> <span id=\"percentageValue\">50%</span><!-- dynamic value --><span>100%</span></div></div><!-- MB --><div id=\"mbInput\" class=\"hidden space-y-2\"><label class=\"font-medium\">Target Size (MB)</label> <input type=\"number\" name=\"mb\" min=\"1\" step=\"1\" placeholder=\"0\" class=\"input input-bordered w-full placeholder:text-gray-400 placeholder:opacity-60\" oninput=\"if(this.value === '0') this.value = ''\" onkeydown=\"return event.key >= '0' && event.key <= '9' || event.key === 'Backspace' || event.key === 'Delete' || event.key === 'ArrowLeft' || event.key === 'ArrowRight'\"></div><!-- Quality --><div id=\"qualityInput\" class=\"hidden space-y-2\"><label class=\"font-medium\">Select Quality</label><div class=\"flex gap-4\"><label class=\"flex items-center gap-2\"><input type=\"radio\" name=\"quality\" value=\"low\" class=\"radio radio-sm\"> <span>Low</span></label> <label class=\"flex items-center gap-2\"><input type=\"radio\" name=\"quality\" value=\"medium\" class=\"radio radio-sm\"> <span>Medium</span></label> <label class=\"flex items-center gap-2\"><input type=\"radio\" name=\"quality\" value=\"high\" class=\"radio radio-sm\" checked> <span>High</span></label></div></div><script>\n\t  // Simple toggle logic for showing inputs\n\t  const methodRadios = document.querySelectorAll('input[name=\"method\"]');\n\t  const percentageDiv = document.getElementById('percentageInput');\n\t  const mbDiv = document.getElementById('mbInput');\n\t  const qualityDiv = document.getElementById('qualityInput');\n\n\t  methodRadios.forEach(radio => {\n\t    radio.addEventListener('change', () => {\n\t      percentageDiv.classList.add('hidden');\n\t      mbDiv.classList.add('hidden');\n\t      qualityDiv.classList.add('hidden');\n\n\t      if (radio.value === 'percentage') percentageDiv.classList.remove('hidden');\n\t      if (radio.value === 'mb') mbDiv.classList.remove('hidden');\n\t      if (radio.value === 'quality') qualityDiv.classList.remove('hidden');\n\t    });\n\t  });\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
