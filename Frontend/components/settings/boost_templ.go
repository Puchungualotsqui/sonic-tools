// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package settings

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Boost() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- Mode selection --><div><h3 class=\"text-lg font-semibold mb-3\">Mode</h3><div class=\"flex flex-col gap-2\"><label class=\"flex items-center gap-2\"><input type=\"radio\" name=\"mode\" value=\"boost\" class=\"radio radio-sm\" checked> <span>Boost (manual gain)</span></label> <label class=\"flex items-center gap-2\"><input type=\"radio\" name=\"mode\" value=\"normalize\" class=\"radio radio-sm\"> <span>Normalize (auto level)</span></label></div></div><!-- Gain slider --><div id=\"gainInput\" class=\"space-y-2\"><label class=\"font-medium\">Gain (dB)</label> <input type=\"range\" name=\"gain\" id=\"gainRange\" min=\"-20\" max=\"20\" value=\"0\" class=\"range\"><div class=\"flex justify-between text-base font-medium px-1\"><span>-20 dB</span> <span id=\"gainValue\">0 dB</span> <span>+20 dB</span></div></div><script>\n\t  const modeRadios = document.querySelectorAll('input[name=\"mode\"]');\n\t  const gainDiv = document.getElementById('gainInput');\n\t  const gainRange = document.getElementById('gainRange');\n\t  const gainValue = document.getElementById('gainValue');\n\n\t  // Update value when slider moves\n\t  gainRange.addEventListener('input', () => {\n\t    gainValue.textContent = `${gainRange.value} dB`;\n\t  });\n\n\t  // Toggle gain slider visibility based on mode\n\t  modeRadios.forEach(radio => {\n\t    radio.addEventListener('change', () => {\n\t      if (radio.value === 'boost') {\n\t        gainDiv.classList.remove('hidden');\n\t      } else {\n\t        gainDiv.classList.add('hidden');\n\t      }\n\t    });\n\t  });\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
