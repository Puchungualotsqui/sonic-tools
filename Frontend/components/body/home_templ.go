// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package body

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"frontend/components/card"
)

func Home() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!-- Hero --><section class=\"hero bg-base-200 pt-10 sm:pt-12 lg:pt-16 pb-0 px-6\"><div class=\"hero-content flex flex-col text-center max-w-6xl mx-auto\"><h1 class=\"text-3xl sm:text-4xl lg:text-5xl font-bold mb-6 leading-tight\">The Easiest Way to Edit Your Audio 🎶</h1><p class=\"text-base sm:text-lg lg:text-xl opacity-80 mb-8 max-w-3xl mx-auto\">Compress, convert, trim, merge, boost and edit metadata — all in your browser. No installs, no hassle. Just upload your audio and make it perfect.</p></div></section><!-- Features --><section class=\"pt-3 sm:pt-8 lg:pt-10 pb-10 sm:pb-12 lg:pb-16 px-6 max-w-6xl mx-auto\"><h2 class=\"text-3xl font-bold text-center mb-10\">Everything you need in one place</h2><div class=\"grid gap-6 md:gap-8 md:grid-cols-2 lg:grid-cols-3\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = card.Card("/compress", "🎚️", "Compress", "Reduce file size while keeping great quality. Choose bitrate, presets, or target size.").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = card.Card("/convert", "🔄", "Convert", "MP3 ⇆ WAV ⇆ FLAC ⇆ OGG ⇆ AAC ⇆ M4A. Seamless format conversion made simple.").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = card.Card("/trim", "✂️", "Trim", "Select start and end time, cut or keep just the part you need — fast and precise.").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = card.Card("/merge", "➕", "Merge", "Combine multiple tracks into one smooth file. Perfect for playlists, podcasts, or mixes.").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = card.Card("/metadata", "🏷️", "Metadata", "Edit title, artist, album, year, and cover art to keep your library tidy.").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = card.Card("/boost", "🔊", "Boost", "Increase the volume of your audio or normalize it for balanced levels.").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div></section>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
